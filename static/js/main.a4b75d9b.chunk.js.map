{"version":3,"sources":["types/Filters.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filters","TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","query","onChangeSelect","onChangeInput","onSubmit","event","preventDefault","onChange","target","value","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","setQuery","loading","setLoading","filtered","setFiltered","finally","preparedTodos","useMemo","filteredTodos","trim","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4b75d9b.chunk.js","sourcesContent":["export enum Filters {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const { id, title, completed } = todo;\n\n        return (\n          <tr\n            key={id}\n            data-cy=\"todo\"\n            className=\"\"\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye': selectedTodo !== todo,\n                    'fa-eye-slash': selectedTodo === todo,\n\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Filters } from '../../types/Filters';\n\ninterface Props {\n  query: string,\n  onChangeSelect: (filter: Filters) => void;\n  onChangeInput: (newQuery: string) => void,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onChangeSelect,\n  onChangeInput,\n}) => {\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={event => onChangeSelect(event.target.value as Filters)}\n          >\n            <option value={Filters.ALL}>All</option>\n            <option value={Filters.ACTIVE}>Active</option>\n            <option value={Filters.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            onChangeInput(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onChangeInput('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(setUser);\n  }, [selectedTodo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { Filters } from './types/Filters';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [filtered, setFiltered] = useState(Filters.ALL);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  const preparedTodos: Todo[] = useMemo(() => {\n    let filteredTodos = [...todos];\n\n    if (query.trim()) {\n      filteredTodos = filteredTodos.filter(\n        todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n      );\n    }\n\n    switch (filtered) {\n      case Filters.ACTIVE:\n        return filteredTodos.filter(todo => todo.completed === false);\n\n      case Filters.COMPLETED:\n        return filteredTodos.filter(todo => todo.completed === true);\n\n      default:\n        return filteredTodos;\n    }\n  }, [query, filtered, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onChangeSelect={setFiltered}\n                onChangeInput={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={preparedTodos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}